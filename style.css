button {
  border: none;
  border-radius: 20px;
  font-size: 20px;
  font-weight: bold;
  cursor: pointer;
  text-transform: uppercase;
  padding: 10px 20px;
}
.tictactoe {
  height: 100vh;
  width: 100vw;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
/* .play {
  display: none;
} */
.player-dashboard{
    display: flex;
    justify-content: space-evenly;
    width: 50%;
}
.player {
  /* border: 4px solid black; */
  display: flex;
  flex-direction: column;
  align-items: center;
}
.confirm-card1, .confirm-card2 {
  display: none;
  opacity: 85%;
  border-radius: 5px;
  transform: translate(-10%,-110%);
  text-align: right;
  font-weight: 900;
  font-size: 20px;
  height: 10vh;
  width: 10vw;
  background-color: grey;
  padding: 20px 90px 30px 30px;
}
input {
  border: none;
  font-size: 20px;
  
}
::placeholder{
  font-weight: 800;
  color:black;
  opacity: 1;
}
.gameboard {
    margin-top: 20px;
    display: none;
    grid-template-columns: repeat(3,1fr);
    grid-template-rows: repeat(3,1fr);
    width: 40vw;
    height: 70vh;
    /* background-color: gray; */
}

/* Add border bottom to all items */
.cell {
    padding: 20px 10px 10px 10px;
    border: 4px solid black;
    font-size: 100px;
    text-align: center;
  }
  
  /* Remove border bottom from last item & from second last if its odd */
        .cell:nth-child(3n+1) {
          border-left: none;
        }
        .cell:nth-child(3n+3) {
          border-right: none;
        }
        .cell:nth-child(n+1) {
            border-top: none;
        }
        .cell:nth-child(n+7){
            border-bottom: none;
        }
  
  /* Add right border to every second item */
  /* .cell:nth-child(odd) { 
    border-right: 1px solid black;
  } */